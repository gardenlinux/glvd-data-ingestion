name: 01 - Build and Push Data Ingestion Container
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
permissions:
  # Checkout repository
  contents: read
  # Push container images
  packages: write
  # This is required for requesting the JWT
  id-token: write
jobs:
  push-data-ingestion-container:
    name: data_ingestion
    runs-on: ubuntu-24.04
    env:
      IMAGE_NAME: gardenlinux/glvd-data-ingestion
      IMAGE_TAG: latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v5

    - name: Install qemu dependency for multi-arch build
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-user-static

    - name: Build Image
      id: build_image
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.IMAGE_NAME }}
        tags: ${{ env.IMAGE_TAG }}
        platforms: linux/amd64, linux/arm64
        containerfiles: |
          ./Containerfile

    - name: Push To ghcr.io
      id: push-to-ghcr
      if: ${{ github.event_name != 'pull_request' }}
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build_image.outputs.image }}
        tags: ${{ steps.build_image.outputs.tags }}
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Print image details
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        echo "Image pushed to ${{ steps.push-to-ghcr.outputs.registry-paths }}"
        echo "Digest ${{ steps.push-to-ghcr.outputs.digest }}"

    - name: Get OIDC token
      if: ${{ github.event_name != 'pull_request' }}
      id: get-token
      run: |
        IDTOKEN=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=glvd" | jq -r '.value')
        echo "idToken=${IDTOKEN}" >> $GITHUB_OUTPUT

    - uses: azure/k8s-set-context@v4
      if: ${{ github.event_name != 'pull_request' }}
      with:
         method: kubeconfig
         kubeconfig: "${{ secrets.KUBECONFIG }}"

    - name: Deploy the image
      if: ${{ github.event_name != 'pull_request' }}
      run: kubectl --namespace default --token "${{ steps.get-token.outputs.idToken }}" set image cj/glvd-ingestion data-ingestion=ghcr.io/gardenlinux/glvd-data-ingestion@${{ steps.push-to-ghcr.outputs.digest }}
