name: 01 - Build and Push Data Ingestion Container
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
permissions:
  # Checkout repository
  contents: read
  # Push container images
  packages: write
  # This is required for requesting the JWT
  id-token: write
jobs:
  push-data-ingestion-container:
    name: data_ingestion
    runs-on: ubuntu-24.04
    env:
      IMAGE_NAME: gardenlinux/glvd-data-ingestion
      IMAGE_TAG: latest
      # Change this if you fork the repo
      OIDC_AUDIENCE: glvd

    steps:
    - name: Checkout repo
      uses: actions/checkout@v5

    - name: Install qemu dependency for multi-arch build
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-user-static

    - name: Build Image
      id: build_image
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.IMAGE_NAME }}
        tags: ${{ env.IMAGE_TAG }}
        platforms: linux/amd64, linux/arm64
        containerfiles: |
          ./Containerfile

    - name: Push To ghcr.io
      id: push-to-ghcr
      if: ${{ github.event_name != 'pull_request' }}
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build_image.outputs.image }}
        tags: ${{ steps.build_image.outputs.tags }}
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Print image details
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        echo "Image pushed to ${{ steps.push-to-ghcr.outputs.registry-paths }}"
        echo "Digest ${{ steps.push-to-ghcr.outputs.digest }}"

    - name: Authenticate to cluster
      id: kube_auth
      uses: gardener/cc-utils/.github/actions/kubernetes-auth@b158a357b8e947b3e4fc3495aad0a9307ed6d3d7
      with:
        server: https://api.glvd.gardnlinux.shoot.canary.k8s-hana.ondemand.com
        server-ca-discovery-url: https://discovery.ingress.garden.canary.k8s.ondemand.com/projects/gardnlinux/shoots/8a569063-b0d3-45c4-a653-158e70b1bfd1/cluster-ca
        audience: ${{ env.OIDC_AUDIENCE }}

    - name: Deploy the image
      if: ${{ github.event_name != 'pull_request' }}
      env:
        KUBECONFIG: kubeconfig.yaml
      run: kubectl --namespace default set image cj/glvd-ingestion data-ingestion=ghcr.io/gardenlinux/glvd-data-ingestion@${{ steps.push-to-ghcr.outputs.digest }}
